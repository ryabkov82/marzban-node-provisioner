name: Deploy Marzban Node

on:
  workflow_dispatch:
    inputs:
      nodes:
        description: "Список узлов (IP/host), по одному в строке"
        required: true
      ssh_user:
        description: "SSH пользователь"
        required: true
        default: "root"
      service_port:
        description: "Node service port"
        required: false
        default: "62050"
      api_port:
        description: "Node API port"
        required: false
        default: "62051"
      add_as_new_host:
        type: boolean
        default: true
        description: "Add node as new host for every inbound"
      usage_coefficient:
        description: "Usage coefficient"
        required: false
        default: "1.0"
      panel_verify_tls:
        type: boolean
        default: true
        description: "Verify TLS certs for panel API requests"
      run_mode:
        description: "Режим запуска: update_only | proxy_only | full | tls_only"
        required: true
        default: "full"
      test_domain:
        description: "Домен для SNI-проверки HAProxy→nginx (опционально)"
        required: false
        default: ""
      cert_master_host:
        description: "SSH-алиас/host cert-master (источник wildcard)"
        required: false
        default: "109.107.185.238"

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # ansible.cfg лежит в КОРНЕ репозитория
      ANSIBLE_CONFIG: ${{ github.workspace }}/ansible.cfg

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install Ansible"
        run: |
          python3 -m pip install --upgrade pip
          pip install ansible==9.5.1 ansible-lint
          ansible --version

      - name: "Install Ansible collections"
        run: ansible-galaxy collection install -r ansible/collections/requirements.yml

      - name: "Setup SSH agent"
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: "Build dynamic inventory (ansible/inventories/ci.ini)"
        id: inv
        shell: bash
        env:
          NODES: ${{ github.event.inputs.nodes }}
          SSH_USER: ${{ github.event.inputs.ssh_user }}
        run: |
          set -euo pipefail
          mkdir -p ansible/inventories
          echo "[marzban_nodes]" > ansible/inventories/ci.ini
          printf '%s\n' "$NODES" | tr -d '\r' | while IFS= read -r line; do
            [[ -z "${line// }" ]] && continue
            echo "$line ansible_user=$SSH_USER" >> ansible/inventories/ci.ini
            ssh-keyscan -H "$line" >> ~/.ssh/known_hosts 2>/dev/null || true
          done
          # Чтобы роль tls_sync не упёрлась в fingerprint cert-master
          if [[ -n "${{ github.event.inputs.cert_master_host }}" ]]; then
            ssh-keyscan -H "${{ github.event.inputs.cert_master_host }}" >> ~/.ssh/known_hosts 2>/dev/null || true
          fi
          echo "---- ansible/inventories/ci.ini ----"
          cat ansible/inventories/ci.ini

      - name: "Show inventory graph"
        run: ansible-inventory -i ansible/inventories/ci.ini --graph

      - name: "Show website_domains (debug)"
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes \
            -m ansible.builtin.debug -a 'var=website_domains' || true

      # ───────── режим: ТОЛЬКО ОБНОВЛЕНИЕ ОС ─────────
      - name: "Update OS via playbook (tags: update,upgrade)"
        if: ${{ inputs.run_mode == 'update_only' }}
        run: |
          ansible-playbook -i ansible/inventories/ci.ini ansible/playbooks/provision_node.yml \
            --tags update,upgrade -vv

      - name: "Sanity check after update (who -b; uptime -s)"
        if: ${{ inputs.run_mode == 'update_only' }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'who -b; uptime -s'

      # ───────── режим: TLS_ONLY ─────────
      - name: "TLS sync only (role tls_sync)"
        if: ${{ inputs.run_mode == 'tls_only' }}
        env:
          CERT_MASTER_HOST: ${{ github.event.inputs.cert_master_host }}
        run: |
          ansible-playbook -i ansible/inventories/ci.ini ansible/playbooks/provision_node.yml \
            --tags tls_sync \
            -e cert_master_host=${CERT_MASTER_HOST} -vv

      - name: "TLS post-check: files and subject"
        if: ${{ inputs.run_mode == 'tls_only' }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m command -a \
            "ls -l /etc/letsencrypt/live/digitalstreamers.xyz/fullchain.pem /etc/letsencrypt/live/digitalstreamers.xyz/privkey.pem"
          ansible -i ansible/inventories/ci.ini marzban_nodes -m command -a \
            "openssl x509 -in /etc/letsencrypt/live/digitalstreamers.xyz/fullchain.pem -noout -subject"
          
      # ───────── режим: ТОЛЬКО ПРОКСИ (HAProxy + nginx) ─────────
      - name: "Apply proxy roles only (tls_sync,haproxy,nginx)"
        if: ${{ inputs.run_mode == 'proxy_only' }}
        env:
          CERT_MASTER_HOST: ${{ github.event.inputs.cert_master_host }}
        run: |
          ansible-playbook -i ansible/inventories/ci.ini ansible/playbooks/provision_node.yml \
            --tags tls_sync,haproxy,nginx \
            -e cert_master_host=${CERT_MASTER_HOST} -vv

      - name: "Proxy post-check: configs and services"
        if: ${{ inputs.run_mode == 'proxy_only' }}
        run: |
          set -e
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'haproxy -c -f /etc/haproxy/haproxy.cfg'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'nginx -t'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'systemctl is-active haproxy; systemctl is-enabled haproxy'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'systemctl is-active nginx;  systemctl is-enabled nginx'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'ss -lntp | egrep ":443|:1936|:8443|:8444" || true'

      - name: "Proxy post-check: nginx listens on 127.0.0.1:8443"
        if: ${{ inputs.run_mode == 'proxy_only' }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a \
            "ss -lnt | awk '\$4 ~ /127\\.0\\.0\\.1:8443/ && \$1 == \"LISTEN\" {found=1} END{exit(found?0:1)}'"

      - name: "Proxy post-check: nginx content on 127.0.0.1:8443"
        if: ${{ inputs.run_mode == 'proxy_only' }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a \
            "curl -ks https://127.0.0.1:8443/ | grep -q 'OK from nginx behind HAProxy'"

      - name: "Proxy post-check: SNI via HAProxy → nginx (optional)"
        if: ${{ inputs.run_mode == 'proxy_only' && inputs.test_domain != '' }}
        env:
          TEST_DOMAIN: ${{ github.event.inputs.test_domain }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a \
            "curl -ks --resolve $TEST_DOMAIN:443:127.0.0.1 https://$TEST_DOMAIN/ | head -1"

      # ───────── режим: ПОЛНЫЙ ДЕПЛОЙ ─────────
      - name: "Full deploy (panel + node + proxy + register)"
        if: ${{ inputs.run_mode == 'full' }}
        env:
          PANEL_URL: ${{ secrets.PANEL_URL }}
          PANEL_USERNAME: ${{ secrets.PANEL_USERNAME }}
          PANEL_PASSWORD: ${{ secrets.PANEL_PASSWORD }}
          PANEL_VALIDATE_CERTS: ${{ github.event.inputs.panel_verify_tls }}
          SERVICE_PORT: ${{ github.event.inputs.service_port }}
          API_PORT: ${{ github.event.inputs.api_port }}
          ADD_AS_NEW_HOST: ${{ github.event.inputs.add_as_new_host }}
          USAGE_COEFFICIENT: ${{ github.event.inputs.usage_coefficient }}
          CERT_MASTER_HOST: ${{ github.event.inputs.cert_master_host }}
        run: |
          ansible-playbook -i ansible/inventories/ci.ini ansible/playbooks/provision_node.yml \
            -e panel_url="$PANEL_URL" \
            -e panel_username="$PANEL_USERNAME" \
            -e panel_password="$PANEL_PASSWORD" \
            -e panel_validate_certs=$PANEL_VALIDATE_CERTS \
            -e service_port=$SERVICE_PORT \
            -e api_port=$API_PORT \
            -e add_as_new_host=$ADD_AS_NEW_HOST \
            -e usage_coefficient=$USAGE_COEFFICIENT \
            -e cert_master_host=${CERT_MASTER_HOST} \
            -vv

      # Проверки выполняем ПОСЛЕ успешного full deploy
      - name: "Post-check after FULL: configs and services"
        if: ${{ inputs.run_mode == 'full' }}
        run: |
          set -e
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'haproxy -c -f /etc/haproxy/haproxy.cfg'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'nginx -t'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'systemctl is-active haproxy; systemctl is-enabled haproxy'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'systemctl is-active nginx;  systemctl is-enabled nginx'
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a 'ss -lntp | egrep ":443|:1936|:8443|:8444" || true'

      - name: "Post-check after FULL: nginx listens on 127.0.0.1:8443"
        if: ${{ inputs.run_mode == 'full' }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a \
            "ss -lnt | awk '\$4 ~ /127\\.0\\.0\\.1:8443/ && \$1 == \"LISTEN\" {found=1} END{exit(found?0:1)}'"

      - name: "Post-check after FULL: nginx content on 127.0.0.1:8443"
        if: ${{ inputs.run_mode == 'full' }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a \
            "curl -ks https://127.0.0.1:8443/ | grep -q 'OK from nginx behind HAProxy'"

      - name: "Post-check after FULL: SNI via HAProxy → nginx (optional)"
        if: ${{ inputs.run_mode == 'full' && inputs.test_domain != '' }}
        env:
          TEST_DOMAIN: ${{ github.event.inputs.test_domain }}
        run: |
          ansible -i ansible/inventories/ci.ini marzban_nodes -m shell -a \
            "curl -ks --resolve $TEST_DOMAIN:443:127.0.0.1 https://$TEST_DOMAIN/ | head -1"
